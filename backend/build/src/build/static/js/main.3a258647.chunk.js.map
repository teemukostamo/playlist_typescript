{"version":3,"sources":["img/logo.png","store/user/types.tsx","components/layout/navbar/AdminNavbar.tsx","components/layout/navbar/index.tsx","store/user/services.tsx","store/user/actions.tsx","components/users/AddUserModal/FormField.tsx","components/users/EditUserModal/FormField.tsx","components/users/EditUserModal/EditUserForm.tsx","components/users/EditUserModal/index.tsx","components/users/UserListItem.tsx","components/users/UserList.tsx","components/users/AddUserModal/AddUserForm.tsx","components/users/AddUserModal/index.tsx","components/users/index.tsx","store/login/services.tsx","components/login/LoginForm.tsx","store/login/actions.tsx","store/login/types.tsx","App.tsx","store/login/reducer.tsx","store/notification/reducer.tsx","store/user/reducer.tsx","store/index.tsx","index.tsx"],"names":["module","exports","UserLevel","AdminNavbar","currentUser","style","marginBottom","Menu","pointing","stackable","inverted","Item","link","to","Image","alt","src","logo","size","position","Navbar","login","useSelector","state","level","token","getAll","a","config","headers","Authorization","axios","get","req","data","setToken","newToken","createUser","userToAdd","post","request","updateUser","userToUpdate","put","id","response","deleteUser","delete","SelectField","name","label","options","Form","Field","as","className","map","option","key","value","TextField","field","placeholder","type","color","PasswordField","levelOptions","DJ","Staff","Admin","statusOptions","AddUserForm","onSubmit","onCancel","user","initialValues","password","confirm_password","first_name","last_name","email","status","validate","values","errors","isValid","component","required","Grid","Column","floated","width","Button","onClick","disabled","EditUserModal","modalOpen","onClose","error","Modal","open","centered","closeIcon","Header","username","Content","Segment","EditUserForm","UserListItem","userLevelOutPrint","userStatusOutPrint","dispatch","useDispatch","useState","openDeleteUser","setDeleteUserOpen","setModalOpen","setError","closeModal","undefined","Table","Row","Cell","userService","users","console","log","e","border","cursor","last_seen","Icon","Confirm","content","onConfirm","cancelButton","confirmButton","UserList","Container","marginTop","display","striped","Body","requiredError","dirty","AddUserModal","Users","React","newUser","credentials","res","LoginForm","setUsername","setPassword","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","loading","message","setTimeout","newLogin","control","Input","onChange","target","trim","App","useEffect","loggedUserJSON","getItem","parse","err","removeItem","exact","path","initialState","loginReducer","action","notificationReducer","userReducer","filter","reducer","combineReducers","notification","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.3a258647.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ca9e42db.png\";","export const INIT_USER_LIST = 'INIT_USER_LIST';\nexport const CREATE_USER = 'CREATE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const SET_LOADING = 'SET_LOADING';\n\nexport interface User {\n  id: number;\n  username: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  address?: string;\n  zip?: string;\n  city?: string;\n  country?: string;\n  phone?: string;\n  status: number | null;\n  level: number;\n  last_seen?: string;\n  reset_key?: string;\n  old_id?: number;\n  created_at: Date;\n  updated_at: Date;\n}\nexport type Users = Array<User>;\n\nexport interface UserToAdd {\n  username: string;\n  password: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nexport enum UserLevel {\n  'DJ' = 1,\n  'Staff' = 2,\n  'Admin' = 3,\n}\n\nexport type UserLevelOptions = {\n  value: UserLevel;\n  label: string;\n};\n\nexport interface AddUserFormValues {\n  username: string;\n  password: string;\n  confirm_password: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nexport interface EditUserFormValues {\n  password: string;\n  confirm_password: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  level: number;\n  status: number | null;\n}\n\nexport interface UserToUpdate {\n  id: number;\n  password: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  level: number;\n  status: number | null;\n}\n\nexport interface UserState {\n  users: Users;\n  loading: boolean;\n}\n\n// user action types\ninterface SetLoadingAction {\n  type: typeof SET_LOADING;\n}\n\ninterface InitUserListAction {\n  type: typeof INIT_USER_LIST;\n  data: Users;\n}\n\ninterface CreateUser {\n  type: typeof CREATE_USER;\n  data: User;\n}\n\ninterface UpdateUser {\n  type: typeof UPDATE_USER;\n  data: Users;\n}\n\ninterface DeleteUser {\n  type: typeof DELETE_USER;\n  data: number;\n}\n\nexport type UserActionTypes =\n  | SetLoadingAction\n  | InitUserListAction\n  | CreateUser\n  | UpdateUser\n  | DeleteUser;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Image, Dropdown, Icon } from 'semantic-ui-react';\nimport logo from '../../../img/logo.png';\nimport { CurrentUser } from '../../../store/login/types';\n\ninterface Props {\n  currentUser: CurrentUser;\n}\n\nconst AdminNavbar: React.FC<Props> = ({ currentUser }) => {\n  return (\n    <div style={{ marginBottom: '1.5rem' }}>\n      <Menu pointing stackable inverted>\n        <Menu.Item link>\n          <Link to='/'>\n            <Image alt='logo' src={logo} size='mini' />\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to='/reports'>\n            <h4>REPORTS</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to='/top100'>\n            <h4>TOP 100</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to='/search'>\n            <h4>SEARCH</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to='/transfer'>\n            <h4>TRANSFER FILES</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to='/programs'>\n            <h4>PROGRAMS</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to='/users'>\n            <h4>USERS</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item position='right'>\n          {/* <Dropdown\n            trigger={trigger}\n            options={options}\n            pointing='top left'\n            icon={null}\n          /> */}\n        </Menu.Item>\n        <Menu.Item>{/* <CurrentReport /> */}</Menu.Item>\n      </Menu>\n    </div>\n  );\n};\n\nexport default AdminNavbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ApplicationState } from '../../../store/types';\nimport AdminNavbar from './AdminNavbar';\n\nconst Navbar: React.FC = () => {\n  const login = useSelector((state: ApplicationState) => state.login);\n  switch (login.currentUser?.level) {\n    case 1:\n      return <AdminNavbar currentUser={login.currentUser} />;\n    case 2:\n      return <AdminNavbar currentUser={login.currentUser} />;\n    case 3:\n      return <AdminNavbar currentUser={login.currentUser} />;\n    default:\n      return null;\n  }\n};\n\nexport default Navbar;\n","import axios from 'axios';\nimport { UserToAdd, UserToUpdate } from './types';\n\nconst baseUrl = '/api/users';\nlet token: string | null = null;\n\nconst setToken = (newToken: string) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const req = await axios.get(baseUrl, config);\n  return req.data;\n};\n\nconst createUser = async (userToAdd: UserToAdd) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const request = await axios.post(baseUrl, userToAdd, config);\n  return request.data;\n};\n\nconst updateUser = async (userToUpdate: UserToUpdate) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.put(\n    `${baseUrl}/${userToUpdate.id}`,\n    userToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst deleteUser = async (id: number) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, setToken, createUser, updateUser, deleteUser };\n","import { Dispatch } from 'redux';\nimport userService from './services';\nimport {\n  SET_LOADING,\n  INIT_USER_LIST,\n  CREATE_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  UserToAdd,\n  UserToUpdate,\n} from './types';\n\nexport const initializeUsers = () => async (dispatch: Dispatch) => {\n  console.log('function ran');\n  try {\n    dispatch({\n      type: SET_LOADING,\n    });\n    const users = await userService.getAll();\n    console.log(users);\n    dispatch({\n      type: INIT_USER_LIST,\n      data: users,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const createUser = (userToAdd: UserToAdd) => async (\n  dispatch: Dispatch\n) => {\n  try {\n    dispatch({\n      type: SET_LOADING,\n    });\n    const newUser = await userService.createUser(userToAdd);\n    dispatch({\n      type: CREATE_USER,\n      data: newUser,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateUser = (userToUpdate: UserToUpdate) => async (\n  dispatch: Dispatch\n) => {\n  try {\n    dispatch({\n      type: SET_LOADING,\n    });\n    await userService.updateUser(userToUpdate);\n    const users = await userService.getAll();\n    dispatch({\n      type: UPDATE_USER,\n      data: users,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteUser = (id: number) => async (dispatch: Dispatch) => {\n  try {\n    dispatch({\n      type: SET_LOADING,\n    });\n    dispatch({\n      type: DELETE_USER,\n      data: id,\n    });\n    await userService.deleteUser(id);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { ErrorMessage, Field, FieldProps, FormikProps } from 'formik';\nimport { Dropdown, DropdownProps, Form } from 'semantic-ui-react';\n\nexport enum UserLevel {\n  'DJ' = 1,\n  'Staff' = 2,\n  'Admin' = 3,\n}\n\nexport type UserLevelOptions = {\n  value: UserLevel;\n  label: string;\n};\n\nexport type UserStatus = number | null;\n\nexport type UserStatusOptions = {\n  value: UserStatus;\n  label: string;\n};\n\n// props for select field component\ntype SelectFieldProps = {\n  name: string;\n  label: string;\n  options: UserLevelOptions[];\n};\n\nexport const SelectField: React.FC<SelectFieldProps> = ({\n  name,\n  label,\n  options,\n}: SelectFieldProps) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field as='select' name={name} className='ui dropdown'>\n      {options.map((option) => (\n        <option key={option.value} value={option.value}>\n          {option.label || option.value}\n        </option>\n      ))}\n    </Field>\n  </Form.Field>\n);\n\ninterface TextProps extends FieldProps {\n  label: string;\n  placeholder: string;\n  type: string;\n}\n\nexport const TextField: React.FC<TextProps> = ({\n  field,\n  label,\n  placeholder,\n}) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} type='text' />\n    <div style={{ color: 'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\ninterface PasswordProps extends FieldProps {\n  label: string;\n  placeholder: string;\n  type: string;\n}\n\nexport const PasswordField: React.FC<PasswordProps> = ({\n  field,\n  label,\n  placeholder,\n}) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} type='password' />\n    <div style={{ color: 'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\ntype CheckboxProps = {\n  id: string;\n  name: string;\n  className: string;\n};\n\nexport const Checkbox = ({\n  id,\n  name,\n  className,\n}: CheckboxProps): JSX.Element => (\n  <Field\n    name={name}\n    render={({ field }: FieldProps) => (\n      <input\n        id={id}\n        {...field}\n        type='checkbox'\n        className={className}\n        checked={true}\n        name='status'\n      />\n    )}\n  />\n);\n","import React from 'react';\nimport { ErrorMessage, Field, FieldProps, FormikProps } from 'formik';\nimport { Dropdown, DropdownProps, Form } from 'semantic-ui-react';\n\ninterface SelectFieldOptions {\n  value: number | string;\n  label: string;\n}\n\n// props for select field component\ntype SelectFieldProps = {\n  name: string;\n  label: string;\n  options: SelectFieldOptions[];\n};\n\nexport const SelectField: React.FC<SelectFieldProps> = ({\n  name,\n  label,\n  options,\n}: SelectFieldProps) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field as='select' name={name} className='ui dropdown'>\n      {options.map((option) => (\n        <option key={option.value} value={option.value}>\n          {option.label || option.value}\n        </option>\n      ))}\n    </Field>\n  </Form.Field>\n);\n\ninterface TextProps extends FieldProps {\n  label: string;\n  placeholder: string;\n  type: string;\n}\n\nexport const TextField: React.FC<TextProps> = ({\n  field,\n  label,\n  placeholder,\n}) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} type='text' />\n    <div style={{ color: 'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\nexport const RequiredTextField: React.FC<TextProps> = ({\n  field,\n  label,\n  placeholder,\n}) => (\n  <Form.Field required>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} type='text' />\n    <div style={{ color: 'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\ninterface PasswordProps extends FieldProps {\n  label: string;\n  placeholder: string;\n  type: string;\n}\n\nexport const PasswordField: React.FC<PasswordProps> = ({\n  field,\n  label,\n  placeholder,\n}) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} type='password' />\n    <div style={{ color: 'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n","import React from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport { Field, Formik, Form } from 'formik';\nimport { User, UserLevelOptions, UserLevel } from '../../../store/user/types';\nimport { TextField, PasswordField, SelectField } from './FormField';\n\nimport { EditUserFormValues } from '../../../store/user/types';\n\ninterface Props {\n  onSubmit: (values: EditUserFormValues) => void;\n  onCancel: () => void;\n  user: User;\n}\n\nconst levelOptions: UserLevelOptions[] = [\n  { value: UserLevel.DJ, label: 'DJ' },\n  { value: UserLevel.Staff, label: 'Staff' },\n  { value: UserLevel.Admin, label: 'Admin' },\n];\n\nconst statusOptions = [\n  { value: 1, label: 'Active' },\n  { value: 0, label: 'Inactive' },\n];\n\nconst AddUserForm: React.FC<Props> = ({ onSubmit, onCancel, user }) => {\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        confirm_password: '',\n        first_name: user.first_name,\n        last_name: user.last_name,\n        email: user.email,\n        level: user.level,\n        status: user.status,\n      }}\n      onSubmit={onSubmit}\n      validate={(values) => {\n        const requiredError = 'Field is required';\n        const errors: { [field: string]: string } = {};\n        if (values.password !== values.confirm_password) {\n          errors.password = 'Passwords do not match';\n          errors.confirm_password = 'Passwords do not match';\n        }\n        if (!values.email) {\n          errors.email = requiredError;\n        }\n        if (!values.first_name) {\n          errors.first_name = requiredError;\n        }\n        if (!values.last_name) {\n          errors.last_name = requiredError;\n        }\n        return errors;\n      }}\n    >\n      {({ isValid }) => {\n        return (\n          <Form className='form ui'>\n            <Field\n              label='Password - fill out field only if you wish to change the password'\n              placeholder='Password'\n              name='password'\n              type='password'\n              component={PasswordField}\n            />\n            <Field\n              label='Confirm password'\n              placeholder='Confirm password'\n              name='confirm_password'\n              type='password'\n              component={PasswordField}\n            />\n            <Field\n              label='First name'\n              placeholder='First name'\n              name='first_name'\n              component={TextField}\n              required\n            />\n            <Field\n              label='Last name'\n              placeholder='Last name'\n              name='last_name'\n              component={TextField}\n            />\n            <Field\n              label='Email'\n              placeholder='Email'\n              name='email'\n              component={TextField}\n            />\n            <SelectField label='Level' name='level' options={levelOptions} />\n            <SelectField label='Status' name='status' options={statusOptions} />\n            <Grid>\n              <Grid.Column floated='left' width={5}>\n                <Button type='button' onClick={onCancel} color='red'>\n                  Cancel\n                </Button>\n              </Grid.Column>\n              <Grid.Column floated='right' width={5}>\n                <Button\n                  type='submit'\n                  floated='right'\n                  color='green'\n                  disabled={!isValid}\n                >\n                  Update\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddUserForm;\n","import React from 'react';\nimport { Modal, Segment } from 'semantic-ui-react';\nimport EditUserForm from './EditUserForm';\nimport { EditUserFormValues } from '../../../store/user/types';\nimport { User } from '../../../store/user/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (values: EditUserFormValues) => void;\n  error?: string;\n  user: User;\n}\n\nconst EditUserModal = ({\n  modalOpen,\n  onClose,\n  onSubmit,\n  error,\n  user,\n}: Props) => (\n  <Modal open={modalOpen} onClose={onClose} centered={false} closeIcon>\n    <Modal.Header>Edit info of user {user.username}</Modal.Header>\n    <Modal.Content>\n      {error && <Segment inverted color='red'>{`Error: ${error}`}</Segment>}\n      <EditUserForm user={user} onSubmit={onSubmit} onCancel={onClose} />\n    </Modal.Content>\n  </Modal>\n);\n\nexport default EditUserModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Table, Icon, Confirm } from 'semantic-ui-react';\nimport { User } from '../../store/user/types';\nimport { updateUser, deleteUser } from '../../store/user/actions';\nimport EditUserModal from './EditUserModal';\nimport { EditUserFormValues } from '../../store/user/types';\n\ninterface Props {\n  user: User;\n}\n\nconst UserListItem: React.FC<Props> = ({ user }) => {\n  const dispatch = useDispatch();\n  const [openDeleteUser, setDeleteUserOpen] = useState<boolean>(false);\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const cancelDelete = () => {\n    setDeleteUserOpen(false);\n  };\n  const confirmDelete = () => {\n    setDeleteUserOpen(false);\n    dispatch(deleteUser(user.id));\n    // setNotificationConnect(`Käyttäjä ${user.username} poistettu!`, 'success')\n  };\n\n  const openModal = (): void => setModalOpen(true);\n  const closeModal = (): void => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitUpdatedUser = (values: EditUserFormValues) => {\n    try {\n      const userToUpdate = {\n        ...values,\n        id: user.id,\n      };\n      dispatch(updateUser(userToUpdate));\n      console.log('updating user', userToUpdate);\n      closeModal();\n    } catch (e) {\n      console.error(e.response.data);\n      setError(e.response.data.error);\n    }\n  };\n\n  let userLevelOutPrint;\n  if (user.level === 1) {\n    userLevelOutPrint = 'DJ';\n  } else if (user.level === 2) {\n    userLevelOutPrint = 'Staff';\n  } else {\n    userLevelOutPrint = 'Admin';\n  }\n\n  let className;\n  let userStatusOutPrint;\n  if (user.status === null) {\n    userStatusOutPrint = 'Inactive';\n    className = 'inactive-user';\n  } else if (user.status === 1) {\n    userStatusOutPrint = 'Active';\n    className = 'active-user';\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <EditUserModal\n          user={user}\n          modalOpen={modalOpen}\n          onSubmit={submitUpdatedUser}\n          error={error}\n          onClose={closeModal}\n        />\n        <button\n          style={{ border: 'none', cursor: 'pointer', color: 'blue' }}\n          onClick={openModal}\n        >\n          {user.username}\n        </button>\n      </Table.Cell>\n      <Table.Cell>\n        {user.first_name} {user.last_name}\n      </Table.Cell>\n      {/* <Table.Cell>\n        <Moment format='MMMM Do YYYY, h:mm:ss a'>{user.last_seen}</Moment>\n      </Table.Cell> */}\n      <Table.Cell>{user.last_seen}</Table.Cell>\n      <Table.Cell className={className}>{userStatusOutPrint}</Table.Cell>\n      <Table.Cell>{userLevelOutPrint}</Table.Cell>\n      <Table.Cell>\n        <Icon\n          color='red'\n          onClick={() => setDeleteUserOpen(true)}\n          name='delete'\n        />\n        <Confirm\n          content={`Are you sure you wish to delete user ${user.username}?`}\n          open={openDeleteUser}\n          onCancel={cancelDelete}\n          onConfirm={confirmDelete}\n          cancelButton='Cancel delete'\n          confirmButton='Confirm delete'\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default UserListItem;\n","import React from 'react';\nimport { Container, Dimmer, Loader, Table } from 'semantic-ui-react';\nimport { LoginState } from '../../store/login/types';\nimport { Users, User } from '../../store/user/types';\n\nimport UserListItem from './UserListItem';\n\ninterface Props {\n  login: LoginState;\n  users: Users;\n}\n\nconst UserList: React.FC<Props> = ({ login, users }) => {\n  if (login.currentUser?.level === 3) {\n    return (\n      <Container>\n        <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\n          <h3 style={{ display: 'inline' }}>Users</h3>\n          {/* <AddUserModal /> */}\n        </div>\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Username</Table.Cell>\n              <Table.Cell>Name</Table.Cell>\n              <Table.Cell>Latest login</Table.Cell>\n              <Table.Cell>Status</Table.Cell>\n              <Table.Cell>Level</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {users.map((user: User) => (\n              <UserListItem user={user} key={user.id} />\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  }\n  return null;\n};\n\nexport default UserList;\n","import React from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport { Field, Formik, Form } from 'formik';\n\nimport {\n  TextField,\n  PasswordField,\n  SelectField,\n  UserLevelOptions,\n  UserLevel,\n} from './FormField';\n\nimport { AddUserFormValues } from '../../../store/user/types';\n\ninterface Props {\n  onSubmit: (values: AddUserFormValues) => void;\n  onCancel: () => void;\n}\n\nconst levelOptions: UserLevelOptions[] = [\n  { value: UserLevel.DJ, label: 'DJ' },\n  { value: UserLevel.Staff, label: 'Staff' },\n  { value: UserLevel.Admin, label: 'Admin' },\n];\n\nconst AddUserForm: React.FC<Props> = ({ onSubmit, onCancel }) => {\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirm_password: '',\n        first_name: '',\n        last_name: '',\n        email: '',\n        level: UserLevel.DJ,\n      }}\n      onSubmit={onSubmit}\n      validate={(values) => {\n        const requiredError = 'Field is required';\n        const errors: { [field: string]: string } = {};\n        if (!values.username) {\n          errors.username = requiredError;\n        }\n        if (!values.password) {\n          errors.password = requiredError;\n        }\n        if (!values.confirm_password) {\n          errors.confirm_password = requiredError;\n        }\n        if (values.password !== values.confirm_password) {\n          errors.password = 'Passwords do not match';\n          errors.confirm_password = 'Passwords do not match';\n        }\n        if (!values.email) {\n          errors.email = requiredError;\n        }\n        if (!values.first_name) {\n          errors.first_name = requiredError;\n        }\n        if (!values.last_name) {\n          errors.last_name = requiredError;\n        }\n        return errors;\n      }}\n    >\n      {({ isValid, dirty }) => {\n        return (\n          <Form className='form ui'>\n            <Field\n              label='Username'\n              placeholder='Username'\n              name='username'\n              component={TextField}\n            />\n            <Field\n              label='Password'\n              placeholder='Password'\n              name='password'\n              type='password'\n              component={PasswordField}\n            />\n            <Field\n              label='Confirm password'\n              placeholder='Confirm password'\n              name='confirm_password'\n              type='password'\n              component={PasswordField}\n            />\n            <Field\n              label='First name'\n              placeholder='First name'\n              name='first_name'\n              component={TextField}\n            />\n            <Field\n              label='Last name'\n              placeholder='Last name'\n              name='last_name'\n              component={TextField}\n            />\n            <Field\n              label='Email'\n              placeholder='Email'\n              name='email'\n              component={TextField}\n            />\n            <SelectField label='Level' name='level' options={levelOptions} />\n            <Grid>\n              <Grid.Column floated='left' width={5}>\n                <Button type='button' onClick={onCancel} color='red'>\n                  Cancel\n                </Button>\n              </Grid.Column>\n              <Grid.Column floated='right' width={5}>\n                <Button\n                  type='submit'\n                  floated='right'\n                  color='green'\n                  disabled={!dirty || !isValid}\n                >\n                  Add\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddUserForm;\n","import React from 'react';\nimport { Modal, Segment } from 'semantic-ui-react';\nimport AddUserForm from './AddUserForm';\nimport { AddUserFormValues } from '../../../store/user/types';\n\ninterface Props {\n  modalOpen: boolean;\n  onClose: () => void;\n  onSubmit: (values: AddUserFormValues) => void;\n  error?: string;\n}\n\nconst AddUserModal = ({ modalOpen, onClose, onSubmit, error }: Props) => (\n  <Modal open={modalOpen} onClose={onClose} centered={false} closeIcon>\n    <Modal.Header>Add a new user</Modal.Header>\n    <Modal.Content>\n      {error && <Segment inverted color='red'>{`Error: ${error}`}</Segment>}\n      <AddUserForm onSubmit={onSubmit} onCancel={onClose} />\n    </Modal.Content>\n  </Modal>\n);\n\nexport default AddUserModal;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ApplicationState } from '../../store/types';\nimport { Button, Icon, Container } from 'semantic-ui-react';\nimport UserList from './UserList';\nimport AddUserModal from './AddUserModal';\nimport { AddUserFormValues } from '../../store/user/types';\nimport { createUser } from '../../store/user/actions';\n\nconst Users: React.FC = () => {\n  const users = useSelector((state: ApplicationState) => state.user);\n  const login = useSelector((state: ApplicationState) => state.login);\n  const dispatch = useDispatch();\n\n  const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<string | undefined>();\n\n  const openModal = (): void => setModalOpen(true);\n  const closeModal = (): void => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewUser = (values: AddUserFormValues) => {\n    try {\n      dispatch(createUser(values));\n      console.log('adding user', values);\n      closeModal();\n    } catch (e) {\n      console.error(e.response.data);\n      setError(e.response.data.error);\n    }\n  };\n  return (\n    <Container>\n      <Button\n        floated='right'\n        color='green'\n        style={{ marginBottom: '0.5rem' }}\n        onClick={() => openModal()}\n      >\n        <Icon name='add' />\n        Add a new user\n      </Button>\n      <AddUserModal\n        modalOpen={modalOpen}\n        onSubmit={submitNewUser}\n        error={error}\n        onClose={closeModal}\n      />\n      <UserList users={users.users} login={login} />\n    </Container>\n  );\n};\n\nexport default Users;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\ninterface LoginCredentials {\n  username: string;\n  password: string;\n}\n\nconst login = async (credentials: LoginCredentials) => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Button, Input } from 'semantic-ui-react';\nimport { newLogin } from '../../store/login/actions';\n\nconst LoginForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n    const user = {\n      username,\n      password,\n    };\n    dispatch(newLogin(user));\n  };\n\n  return (\n    <div>\n      <h1>RADIO TRACKLIST REPORTING</h1>\n      <h3>Log in</h3>\n      <Form onSubmit={handleLogin}>\n        <Form.Field\n          label='username'\n          control={Input}\n          type='text'\n          placeholder='Username...'\n          onChange={(e: { target: { value: string } }) =>\n            setUsername(e.target.value.trim())\n          }\n        />\n        <Form.Field\n          label='password'\n          control={Input}\n          type='password'\n          placeholder='Password...'\n          onChange={(e: { target: { value: string } }) =>\n            setPassword(e.target.value.trim())\n          }\n        />\n        <Button color='green' type='submit'>\n          Log in\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import loginService from './services';\nimport { SET_LOADING } from './types';\nimport { Dispatch } from 'redux';\n\nimport userService from '../user/services';\n\ninterface NewLogin {\n  username: string;\n  password: string;\n}\n\nexport const initializeUser = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch({\n      type: SET_LOADING,\n    });\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // set token for logged in user\n      userService.setToken(user.token);\n      // reportService.setToken(user.token);\n      // programService.setToken(user.token);\n      // searchService.setToken(user.token);\n      // trackService.setToken(user.token);\n      // artistService.setToken(user.token);\n      // albumService.setToken(user.token);\n      dispatch({\n        type: 'INIT_USER',\n        data: user,\n      });\n    }\n  } catch (err) {\n    // dispatch({\n    //   type: LOGIN_ERROR,\n    //   payload: err.response.statusText,\n    // });\n    console.log(err);\n  }\n};\n\nexport const newLogin = (user: NewLogin) => async (dispatch: Dispatch) => {\n  try {\n    dispatch({\n      type: SET_LOADING,\n    });\n    const newUser = await loginService.login(user);\n    console.log(newUser);\n    window.localStorage.setItem('loggedUser', JSON.stringify(newUser));\n\n    dispatch({\n      type: 'LOGIN',\n      data: newUser,\n      loading: false,\n    });\n  } catch (error) {\n    console.log(error);\n    const content = {\n      message: 'wrong username or password',\n      type: 'fail',\n    };\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content,\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION',\n      });\n    }, 3000);\n  }\n};\n\nexport const logout = () => async (dispatch: Dispatch) => {\n  window.localStorage.removeItem('loggedUser');\n  dispatch({\n    type: 'LOGOUT',\n  });\n};\n","export const INIT_USER = 'INIT_USER';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_LOADING = 'SET_LOADING';\n\nexport interface CurrentUser {\n  token: string;\n  username: string;\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  level: number;\n  status: number;\n}\n\nexport interface LoginState {\n  loading: boolean;\n  currentUser: CurrentUser | null;\n}\n\ninterface NewLoginAction {\n  type: typeof LOGIN;\n  data: CurrentUser;\n}\n\ninterface InitUserAction {\n  type: typeof INIT_USER;\n  data: CurrentUser;\n}\n\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ninterface SetLoadingAction {\n  type: typeof SET_LOADING;\n}\n\nexport type LoginActionTypes =\n  | SetLoadingAction\n  | NewLoginAction\n  | InitUserAction\n  | LogoutAction;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Button } from 'semantic-ui-react';\nimport './App.css';\n\nimport Navbar from './components/layout/navbar';\nimport Users from './components/users';\nimport LoginForm from './components/login/LoginForm';\n\nimport { initializeUser, logout } from './store/login/actions';\nimport { initializeUsers } from './store/user/actions';\nimport { ApplicationState } from './store/types';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const login = useSelector((state: ApplicationState) => state.login);\n  console.log('login state', login);\n\n  useEffect(() => {\n    dispatch(initializeUser());\n    dispatch(initializeUsers());\n    axios.get<void>('/ping');\n    // eslint-disable-next-line\n  }, [login.currentUser?.token]);\n\n  const handleLogoutClick = () => {\n    dispatch(logout());\n  };\n\n  if (login.currentUser === null) {\n    return (\n      <Container>\n        <LoginForm />\n      </Container>\n    );\n  }\n  if (login.currentUser?.status === null) {\n    return (\n      <Container>\n        <div>Credentials deactivated. Please contact the administrator.</div>\n        <LoginForm />\n      </Container>\n    );\n  }\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <h1>you logged in as {login.currentUser.username}</h1>\n        <Button onClick={handleLogoutClick}>logout</Button>\n      </div>\n      <Switch>\n        {/* <Route exact path='/' component={Home} />\n        <Route exact path='/reports' component={ReportList} />\n        <Route exact path='/transfer' component={ReportTransferList} />\n        <Route\n          path='/reports/:id'\n          render={({ match }) => {\n            return <ReportWithTracks id={match.params.id} />;\n          }}\n        />\n        <Route\n          path='/artist/:id'\n          render={({ match }) => {\n            return <ArtistDetails id={match.params.id} />;\n          }}\n        />\n        <Route\n          path='/album/:id'\n          render={({ match }) => {\n            return <AlbumDetails id={match.params.id} />;\n          }}\n        />\n        <Route\n          path='/track/:id'\n          render={({ match }) => {\n            return <TrackDetails id={match.params.id} />;\n          }}\n        />\n        <Route exact path='/programs' component={ProgramList} />\n        <Route exact path='/search' component={Search} />\n        <Route exact path='/top100' component={Top100List} /> */}\n        <Route exact path='/users' component={Users} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { Action, Reducer } from 'redux';\nimport {\n  LoginActionTypes,\n  LoginState,\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  SET_LOADING,\n} from './types';\n\nconst initialState: LoginState = {\n  loading: false,\n  currentUser: null,\n};\n\nconst loginReducer: Reducer<LoginState, Action> = (\n  state = initialState,\n  action: LoginActionTypes\n) => {\n  switch (action.type) {\n    case INIT_USER:\n      return {\n        ...state,\n        currentUser: action.data,\n        loading: false,\n      };\n    case LOGIN:\n      return {\n        ...state,\n        currentUser: action.data,\n        loading: false,\n      };\n    case LOGOUT:\n      return initialState;\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import { Action, Reducer } from 'redux';\nimport { NotificationState, NotificationActionTypes } from './types';\n\nconst initialState: NotificationState = {\n  message: null,\n  type: null,\n};\n\nconst notificationReducer: Reducer<NotificationState, Action> = (\n  state = initialState,\n  action: NotificationActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.data;\n\n    case 'CLEAR_NOTIFICATION':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;\n","import { Action, Reducer } from 'redux';\nimport {\n  INIT_USER_LIST,\n  SET_LOADING,\n  CREATE_USER,\n  UPDATE_USER,\n  DELETE_USER,\n  UserState,\n  UserActionTypes,\n} from './types';\n\nconst initialState: UserState = {\n  users: [],\n  loading: false,\n};\n\nconst userReducer: Reducer<UserState, Action> = (\n  state = initialState,\n  action: UserActionTypes\n) => {\n  switch (action.type) {\n    case INIT_USER_LIST:\n      return {\n        ...state,\n        users: action.data,\n        loading: false,\n      };\n    case CREATE_USER:\n      return {\n        ...state,\n        users: [...state.users, action.data],\n        loading: false,\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        users: action.data,\n        loading: false,\n      };\n    case DELETE_USER:\n      return {\n        ...state,\n        users: state.users.filter((user) => user.id !== action.data),\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport loginReducer from './login/reducer';\nimport notificationReducer from './notification/reducer';\nimport userReducer from './user/reducer';\n\nconst reducer = combineReducers({\n  login: loginReducer,\n  notification: notificationReducer,\n  user: userReducer,\n});\n\nexport default createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}